theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Mean of rel_attend_unwgt by College with 95% CI")
# Save the plots as JPEGs
ggsave("plot_applyse.jpg", plot = plot_applyse, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
ggsave("plot_attendse.jpg", plot = plot_attendse, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
## Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
###
# Reading the data
file_path <- "data/CollegeAdmissions.csv"  # Adjust this if your file path is different
data <- read_csv(file_path)
# Define the list of colleges
selected_colleges <- c("Amherst College", "Bates College", "Bowdoin College",
"Colby College", "Connecticut College", "Hamilton College",
"Middlebury College", "Trinity College", "Tufts University",
"Wesleyan College", "Williams College")
# Filter the data for the selected colleges
filtered_data <- data %>%
filter(name %in% selected_colleges)
# Calculate the mean for each variable for the selected colleges
mean_data <- filtered_data %>%
group_by(name) %>%
summarise(
Mean_rel_apply_unwgt = mean(rel_apply_unwgt, na.rm = TRUE),
Mean_rel_attend_unwgt = mean(rel_attend_unwgt, na.rm = TRUE),
Mean_rel_att_cond_app_sat = mean(rel_att_cond_app_sat, na.rm = TRUE)
)
# Create a chart for each variable
plot_apply <- ggplot(mean_data, aes(x = name, y = Mean_rel_apply_unwgt)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Mean of rel_apply_unwgt by College")
plot_attend <- ggplot(mean_data, aes(x = name, y = Mean_rel_attend_unwgt)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Mean of rel_attend_unwgt by College")
plot_att_cond_app_sat <- ggplot(mean_data, aes(x = name, y = Mean_rel_att_cond_app_sat)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Mean of rel_att_cond_app_sat by College")
# Save the plots
ggsave("plot_apply.png", plot = plot_apply, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output")
ggsave("plot_attend.png", plot = plot_attend, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output")
ggsave("plot_att_cond_app_sat.png", plot = plot_att_cond_app_sat, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output")
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
# Reading the data
file_path <- "data/CollegeAdmissions.csv"  # Adjust this if your file path is different
data <- read_csv(file_path)
# Define the list of colleges
selected_colleges <- c("Amherst College", "Bates College", "Bowdoin College",
"Colby College", "Connecticut College", "Hamilton College",
"Middlebury College", "Trinity College", "Tufts University",
"Wesleyan College", "Williams College")
# Filter the data for the selected colleges
filtered_data <- data %>%
filter(name %in% selected_colleges)
# Create a scatter plot for rel_apply_unwgt
plot_apply <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_apply_unwgt, color = name)) +
geom_point() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_apply_unwgt by par_income_bin")
# Create a scatter plot for rel_attend_unwgt
plot_attend <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_attend_unwgt, color = name)) +
geom_point() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_attend_unwgt by par_income_bin")
# Save the plots as JPG
ggsave("plot_apply.jpg", plot = plot_apply, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
ggsave("plot_attend.jpg", plot = plot_attend, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
# Reading the data
file_path <- "data/CollegeAdmissions.csv"  # Adjust this if your file path is different
data <- read_csv(file_path)
# Define the list of colleges
selected_colleges <- c("Amherst College", "Bates College", "Bowdoin College",
"Colby College", "Connecticut College", "Hamilton College",
"Middlebury College", "Trinity College", "Tufts University",
"Wesleyan College", "Williams College")
# Filter the data for the selected colleges
filtered_data <- data %>%
filter(name %in% selected_colleges)
# Create a scatter plot with lines for rel_apply_unwgt
plot_apply <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_apply_unwgt, color = name, group = name)) +
geom_point() +
geom_line() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_apply_unwgt by par_income_bin")
# Create a scatter plot with lines for rel_attend_unwgt
plot_attend <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_attend_unwgt, color = name, group = name)) +
geom_point() +
geom_line() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_attend_unwgt by par_income_bin")
# Save the plots as JPG
ggsave("plot_apply.jpg", plot = plot_apply, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
ggsave("plot_attend.jpg", plot = plot_attend, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
# Reading the data
file_path <- "data/CollegeAdmissions.csv"  # Adjust this if your file path is different
data <- read_csv(file_path)
# Define the list of colleges
selected_colleges <- c("Amherst College", "Bates College", "Bowdoin College",
"Colby College", "Connecticut College", "Hamilton College",
"Middlebury College", "Trinity College", "Tufts University",
"Wesleyan College", "Williams College")
# Filter the data for the selected colleges
filtered_data <- data %>%
filter(name %in% selected_colleges)
# Create a scatter plot with lines for rel_apply
plot_apply <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_apply, color = name, group = name)) +
geom_point() +
geom_line() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_apply by par_income_bin")
# Create a scatter plot with lines for rel_attend
plot_attend <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_attend, color = name, group = name)) +
geom_point() +
geom_line() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_attend by par_income_bin")
# Save the plots as JPG
ggsave("plot_apply.jpg", plot = plot_apply, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
ggsave("plot_attend.jpg", plot = plot_attend, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
# Reading the data
file_path <- "data/CollegeAdmissions.csv"  # Adjust this if your file path is different
data <- read_csv(file_path)
# Define the list of colleges
selected_colleges <- c("Amherst College", "Bates College", "Bowdoin College",
"Colby College", "Connecticut College", "Hamilton College",
"Middlebury College", "Trinity College", "Tufts University",
"Wesleyan College", "Williams College")
# Filter the data for the selected colleges
filtered_data <- data %>%
filter(name %in% selected_colleges)
# Calculate the confidence intervals
filtered_data <- filtered_data %>%
mutate(
lower_ci = rel_attend - (1.96 * stderr_attend),
upper_ci = rel_attend + (1.96 * stderr_attend)
)
# Create a scatter plot with confidence intervals for rel_attend
plot_attend_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_attend, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.1) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_attend by par_income_bin with 95% CI")
# Save the plot as JPG
ggsave("plot_attend_ci.jpg", plot = plot_attend_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
# Reading the data
file_path <- "data/CollegeAdmissions.csv"  # Adjust this if your file path is different
data <- read_csv(file_path)
# Define the list of colleges
selected_colleges <- c("Amherst College", "Bates College", "Bowdoin College",
"Colby College", "Connecticut College", "Hamilton College",
"Middlebury College", "Trinity College", "Tufts University",
"Wesleyan College", "Williams College")
# Filter the data for the selected colleges
filtered_data <- data %>%
filter(name %in% selected_colleges)
# Calculate the confidence intervals for rel_attend and rel_apply
filtered_data <- filtered_data %>%
mutate(
lower_ci_attend = rel_attend - (1.96 * stderr_rel_attend),
upper_ci_attend = rel_attend + (1.96 * stderr_rel_attend),
lower_ci_apply = rel_apply - (1.96 * stderr_rel_apply),
upper_ci_apply = rel_apply + (1.96 * stderr_rel_apply)
)
# Create a scatter plot with confidence intervals for rel_attend
plot_attend_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_attend, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = lower_ci_attend, ymax = upper_ci_attend), width = 0.1) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_attend by par_income_bin with 95% CI")
# Create a scatter plot with confidence intervals for rel_apply
plot_apply_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_apply, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = lower_ci_apply, ymax = upper_ci_apply), width = 0.1) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_apply by par_income_bin with 95% CI")
# Save the plots as JPG
ggsave("plot_attend_ci.jpg", plot = plot_attend_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
ggsave("plot_apply_ci.jpg", plot = plot_apply_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
# Reading the data
file_path <- "data/CollegeAdmissions.csv"  # Adjust this if your file path is different
data <- read_csv(file_path)
# Define the list of colleges
selected_colleges <- c("Amherst College", "Bates College", "Bowdoin College",
"Colby College", "Connecticut College", "Hamilton College",
"Middlebury College", "Trinity College", "Tufts University",
"Wesleyan College", "Williams College")
# Filter the data for the selected colleges
filtered_data <- data %>%
filter(name %in% selected_colleges)
# Calculate the confidence intervals for rel_attend and rel_apply
filtered_data <- filtered_data %>%
mutate(
lower_ci_attend = rel_attend - (1.96 * stderr_rel_attend),
upper_ci_attend = rel_attend + (1.96 * stderr_rel_attend),
lower_ci_apply = rel_apply - (1.96 * stderr_rel_apply),
upper_ci_apply = rel_apply + (1.96 * stderr_rel_apply)
)
# Create a scatter plot with dotted confidence intervals for rel_attend
plot_attend_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_attend, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = lower_ci_attend, ymax = upper_ci_attend), width = 0.1, linetype = "dotted") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_attend by par_income_bin with 95% CI")
# Create a scatter plot with dotted confidence intervals for rel_apply
plot_apply_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_apply, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = lower_ci_apply, ymax = upper_ci_apply), width = 0.1, linetype = "dotted") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_apply by par_income_bin with 95% CI")
# Save the plots as JPG
ggsave("plot_attend_ci.jpg", plot = plot_attend_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
ggsave("plot_apply_ci.jpg", plot = plot_apply_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
library(ggstance)  # for horizontal error bars
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
library(ggstance)  # for horizontal error bars
install.package('ggstance')
install.packages('ggstance')
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
library(ggstance)  # for horizontal error bars
# Reading the data
file_path <- "data/CollegeAdmissions.csv"  # Adjust this if your file path is different
data <- read_csv(file_path)
# Define the list of colleges
selected_colleges <- c("Amherst College", "Bates College", "Bowdoin College",
"Colby College", "Connecticut College", "Hamilton College",
"Middlebury College", "Trinity College", "Tufts University",
"Wesleyan College", "Williams College")
# Filter the data for the selected colleges
filtered_data <- data %>%
filter(name %in% selected_colleges)
# Calculate the confidence intervals for rel_attend and rel_apply
filtered_data <- filtered_data %>%
mutate(
lower_ci_attend = rel_attend - (1.96 * stderr_rel_attend),
upper_ci_attend = rel_attend + (1.96 * stderr_rel_attend),
lower_ci_apply = rel_apply - (1.96 * stderr_rel_apply),
upper_ci_apply = rel_apply + (1.96 * stderr_rel_apply)
)
# Create a scatter plot with horizontal confidence intervals for rel_attend
plot_attend_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_attend, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbarh(aes(xmin = lower_ci_attend, xmax = upper_ci_attend), height = 0.2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_attend by par_income_bin with 95% CI")
# Create a scatter plot with horizontal confidence intervals for rel_apply
plot_apply_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_apply, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbarh(aes(xmin = lower_ci_apply, xmax = upper_ci_apply), height = 0.2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_apply by par_income_bin with 95% CI")
# Save the plots as JPG
ggsave("plot_attend_ci.jpg", plot = plot_attend_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
ggsave("plot_apply_ci.jpg", plot = plot_apply_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
library(ggstance)  # for horizontal error bars
# Reading the data
file_path <- "data/CollegeAdmissions.csv"  # Adjust this if your file path is different
data <- read_csv(file_path)
# Define the list of colleges
selected_colleges <- c("Amherst College", "Bates College", "Bowdoin College",
"Colby College", "Connecticut College", "Hamilton College",
"Middlebury College", "Trinity College", "Tufts University",
"Wesleyan College", "Williams College")
# Filter the data for the selected colleges
filtered_data <- data %>%
filter(name %in% selected_colleges)
# Calculate the confidence intervals for rel_attend and rel_apply
filtered_data <- filtered_data %>%
mutate(
lower_ci_attend = rel_attend - (1.96 * stderr_rel_attend),
upper_ci_attend = rel_attend + (1.96 * stderr_rel_attend),
lower_ci_apply = rel_apply - (1.96 * stderr_rel_apply),
upper_ci_apply = rel_apply + (1.96 * stderr_rel_apply)
)
# Create a scatter plot with horizontal confidence intervals for rel_attend
plot_attend_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_attend, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbarh(aes(xmin = lower_ci_attend, xmax = upper_ci_attend), height = 0.2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_attend by par_income_bin with 95% CI")
# Create a scatter plot with horizontal confidence intervals for rel_apply
plot_apply_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_apply, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbarh(aes(xmin = lower_ci_apply, xmax = upper_ci_apply), height = 0.2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_apply by par_income_bin with 95% CI")
# Save the plots as JPG
ggsave("plot_attend_ci.jpg", plot = plot_attend_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
ggsave("plot_apply_ci.jpg", plot = plot_apply_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo")
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
# Reading the data
file_path <- "data/CollegeAdmissions.csv"  # Adjust this if your file path is different
data <- read_csv(file_path)
# Define the list of colleges
selected_colleges <- c("Amherst College", "Bates College", "Bowdoin College",
"Colby College", "Connecticut College", "Hamilton College",
"Middlebury College", "Trinity College", "Tufts University",
"Wesleyan College", "Williams College")
# Filter the data for the selected colleges
filtered_data <- data %>%
filter(name %in% selected_colleges)
# Calculate the confidence intervals for rel_attend and rel_apply
filtered_data <- filtered_data %>%
mutate(
lower_ci_attend = rel_attend - (1.96 * stderr_rel_attend),
upper_ci_attend = rel_attend + (1.96 * stderr_rel_attend),
lower_ci_apply = rel_apply - (1.96 * stderr_rel_apply),
upper_ci_apply = rel_apply + (1.96 * stderr_rel_apply)
)
# Create a scatter plot with error bars and horizontal lines for rel_attend
plot_attend_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_attend, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = lower_ci_attend, ymax = upper_ci_attend), width = 0.2, linetype = "dotted") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_attend by par_income_bin with 95% CI")
# Create a scatter plot with error bars and horizontal lines for rel_apply
plot_apply_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_apply, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = lower_ci_apply, ymax = upper_ci_apply), width = 0.2, linetype = "dotted") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_apply by par_income_bin with 95% CI")
# Save the plots as JPG
ggsave("plot_attend_ci.jpg", plot = plot_attend_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo", device = "jpg", width = 10, height = 8, units = "in")
ggsave("plot_apply_ci.jpg", plot = plot_apply_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo", device = "jpg", width = 10, height = 8, units = "in")
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
# Reading the data
file_path <- "data/CollegeAdmissions.csv"  # Adjust this if your file path is different
data <- read_csv(file_path)
# Define the list of colleges
selected_colleges <- c("Amherst College", "Bates College", "Bowdoin College",
"Colby College", "Connecticut College", "Hamilton College",
"Middlebury College", "Trinity College", "Tufts University",
"Wesleyan College", "Williams College")
# Filter the data for the selected colleges
filtered_data <- data %>%
filter(name %in% selected_colleges)
# Calculate the confidence intervals for rel_attend and rel_apply
filtered_data <- filtered_data %>%
mutate(
lower_ci_apply = rel_apply - (1.96 * stderr_rel_apply),
upper_ci_apply = rel_apply + (1.96 * stderr_rel_apply)
)
# Create a scatter plot with error bars and horizontal lines for rel_apply
plot_apply_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_apply, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = lower_ci_apply, ymax = upper_ci_apply), width = 0.2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_apply by par_income_bin with 95% CI")
# Save the plot as JPG
ggsave("plot_apply_ci.jpg", plot = plot_apply_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo", device = "jpg", width = 10, height = 8, units = "in")
# Sourcing first
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# Load necessary libraries
library(ggplot2)
library(readr)  # for read_csv
library(dplyr)  # for data manipulation
# Reading the data
file_path <- "data/CollegeAdmissions.csv"  # Adjust this if your file path is different
data <- read_csv(file_path)
# Define the list of colleges
selected_colleges <- c("Amherst College", "Bates College", "Bowdoin College",
"Colby College", "Connecticut College", "Hamilton College",
"Middlebury College", "Trinity College", "Tufts University",
"Wesleyan College", "Williams College")
# Filter the data for the selected colleges
filtered_data <- data %>%
filter(name %in% selected_colleges)
# Calculate the confidence intervals for rel_attend and rel_apply
filtered_data <- filtered_data %>%
mutate(
lower_ci_attend = rel_attend - (1.96 * stderr_rel_attend),
upper_ci_attend = rel_attend + (1.96 * stderr_rel_attend),
lower_ci_apply = rel_apply - (1.96 * stderr_rel_apply),
upper_ci_apply = rel_apply + (1.96 * stderr_rel_apply)
)
# Create a scatter plot with error bars for rel_attend
plot_attend_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_attend, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = lower_ci_attend, ymax = upper_ci_attend), width = 0.6) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_attend by par_income_bin with 95% CI")
# Create a scatter plot with error bars for rel_apply
plot_apply_ci <- ggplot(filtered_data, aes(x = par_income_bin, y = rel_apply, color = name, group = name)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = lower_ci_apply, ymax = upper_ci_apply), width = 0.6) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("rel_apply by par_income_bin with 95% CI")
# Save the plots as JPG
ggsave("plot_attend_ci.jpg", plot = plot_attend_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo", device = "jpg", width = 10, height = 8, units = "in")
ggsave("plot_apply_ci.jpg", plot = plot_apply_ci, path = "/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/output", type = "cairo", device = "jpg", width = 10, height = 8, units = "in")
install.packages(reticulate)
install.packages('reticulate')
library(reticulate)
---
title: "Problem Set 1"
knitr::opts_chunk$set(echo = TRUE)
#You may need to put a directory in front of the housekeeping file if it is not in the same directory as this Rmd file.
#For example, if the file is in a parent directory called "code," while this .Rmd is in "code/analysis," you would use:
#source('../housekeeping.R')
source('/Users/samuelcrawford/Desktop/Big Data/big-data-PS1MaggieSam2nd/housekeeping.r')
# If you hit an issue installing the necessary packages when knitting this .Rmd, you can install outside of this Rmd by running housekeeping.R on its own.
# Then you can comment out the installation.
reticulate::repl_python()
